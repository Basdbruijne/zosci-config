- hosts: all
  tasks:
    - name: Check if charm is source charm
      shell: |
        [[ -d src ]]
      args:
        executable: /bin/bash
      register: charm_buildable
      failed_when: false
    - name: 'source charm'
      when: charm_buildable.rc == 0
      command: "{{ tox_executable }} -e build"
    - name: 'source charm fact'
      when: charm_buildable.rc == 0
      command: echo "Source charms aren't currencly supported" && /bin/false
      # set_fact:
      #   charm_path: "{{ zuul.executor.src_root }}/builds/build/*"
    # TODO evaluate saving the built charm as an artifact:
    # 
    # - name: Find built charm
    #   when: charm_buildable.rc == 0
    #   find:
    #     file_type: directory
    #     # paths: "src/{{ zuul.project.canonical_name }}/dist"
    #     paths: "build/builds"
    #   register: result
    # - name: Return built charm to Zuul
    #   loop: "{{ result.files }}"
    #   zuul_return:
    #     data:
    #       zuul:
    #         artifacts:
    #           - name: charm
    #             url: "{{ zuul.executor.src_root }}"
    #           # - name: "Python wheel"
    #           #   url: "artifacts/{{ item.path | basename }}"
    #           #   metadata:
    #           #     type: python_wheel

    - name: 'set charm is classic'
      when: charm_buildable.rc == 1
      command: /bin/true
      # zuul_return:
      #   data:
      #     zuul:
      #       artifacts:
      #         - name: charm
      #           url: "{{ zuul.executor.src_root }}"